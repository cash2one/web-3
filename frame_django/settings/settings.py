# -*- coding: utf-8 -*-
# @Date:   2016-10-09 18:16:48
# @Last Modified time: 2016-11-27 21:34:47
#
#
# Django默认settings————${Python}\Lib\site-packages\django\conf\global_settings.py
# Django用户settings————项目中的 settings
# 用户设置与默认设置冲突时，覆盖掉默认设置。
#
# 设置项目使用的settings文件
# Unix Bash Shell：export DJANGO_SETTINGS_MODULE=mysite.settings
# Windows命令行：set DJANGO_SETTINGS_MODULE=mysite.settings
#
# django的路径符和Linux上一样————"/"。
# 显示当前settings文件与Django默认设置的不同————python manage.py diffsettings
#
#
"""
Django settings for djj_test project.

Generated by 'django-admin startproject' using Django 1.9.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
#
# 根路径
#
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#
# 为密码哈希算法提供一个种子
# 将其设置为一个随机字符串 -- 越长越好
#
SECRET_KEY = 'a(xz3pu-+8ry82#ie%ol73npkmq1lboyjf^)%v4ksc_$l4=*80'

# SECURITY WARNING: don't run with debug turned on in production!
#
# 开发模式
# 与正式环境有很大的区别，比如缓存、出错信息的方式等等
# 把DEBUG设置成False，那么静态文件都交给nginx、apache来处理
#
DEBUG = True
#
# 是否抑制视图的普通异常处理，异常将继续向上传递
#
DEBUG_PROPAGATE_EXCEPTIONS = False
#
# 指定是否输出Etag头。节省带宽,但降低性能
#
USE_ETAGS = False
DEFAULT_CONTENT_TYPE = 'text/html'
DEFAULT_CHARSET = 'utf-8'
FILE_CHARSET = 'utf-8'
'''
from django.conf.settings import DEBUG
if DEBUG:
    Do something
'''

#
# Application definition
# 加入新建立的app
#
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
#
# 中间件
#
MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


# =====================================
from template import *  # 分散配置template信息
from database import *  # 分散配置database信息
from static import *  # 分散配置static信息
from manager import *  # 分散配置user信息
from local import *  # 分散配置local信息
from url import *  # 分散配置url信息
# ======================================
# wsgi
#
WSGI_APPLICATION = 'djj_test.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

ABSOLUTE_URL_OVERRIDES = {}
