内建过滤器

*'''abs(number)''' 返回数字的绝对值

*'''batch(value, linecount, fill_with=None)'''
:将一个序列以给定值分成若干片，如果给定了fill_with，则会将fill_with补充到未分配的部分。比如一个序列 ['a','b','c','d','e'], 用数值3分片将会得到[['a','b','c'], ['d','e']], 如果分片时指定fill_with='&nbsp;'，结果将会是[['a','b','c'], ['d','e','&nbsp;']]
:这个过滤器的用处在于，如果你要在表格中显示一个很长的序列，每行显示5个，则可以用下面的方式打印：
<pre>
{% for row in seq|batch(3, '&nbsp;') %}
{% for item in row %}
</pre>
*'''capitalize(s)'''
首字符大写
*'''center(value, width=80)'''
生成一个长度为width的空字符串，将value放在中间
*'''default(value, default_value=u”, boolean=False)'''
如果value未定义，则显示default_value，如果value是一个bool型，需要将boolean置为true，这样当value为 false是将会打印缺省值
这个过滤器的别名是d
*'''dictsort(value, case_sensitive=False, by='key')'''
字典排序，case_sensitive决定是否大小写敏感，by决定是按照key排序还是按value排序
*'''escape(s)'''
html字符转义，别名是e
*'''filesizeformat(value)'''
将一个大数字转换成KMG形式，如：1.3k，34g，25.3m等等

*'''first(seq)'''
返回序列的第一个值
*'''float(value, default=0.0)'''
将一个值转换成浮点数，如果转换失败则返回default
*'''forceescape(value)'''
不管value是否被转义过，一律进行html转义。比如value="<", 如果用“value|e|e”则会得到“&lt;",而不是"&amp;lt;",如果用forceescape则会得 到"&amp;lt;"

*'''format(value, *args, **kwargs)'''
等同于python的"%s,%s" % (str1, str2)
*'''groupby(value, attribute)'''
类似SQL的group by,可以将一个序列里的对象/字典，按照attribute分组。如下例：
<pre>
<ul>
{% for group in persons|groupby('gender') %}
    <li>{{ group.grouper }}<ul>
    {% for person in group.list %}
        <li>{{ person.first_name }} {{ person.last_name }}</li>
    {% endfor %}</ul></li>
{% endfor %}
</ul>
</pre>
也可以用下面的方式使用：
<pre>
<ul>
{% for grouper, list in persons|groupby('gender') %}
    ...
{% endfor %}
</ul>
</pre>
"grouper"是分组的值，在上面的例子中分别是“male”和“female”
*'''indent(s, width=4, indentfirst=False)'''
将文本s中每行的首字符缩进width个字符。indentfirst表示是否缩进第一行。
*'''int(value, default=0)'''
将value转换成整数，如果转换失败则返回default
*'''join(seq, d=u”)'''
将序列seq中的各个值用d字符连接起来形成一个字符串。
*'''last(seq)'''
序列的最后一个值。
*'''length(object)'''
序列或者字典的长度
别名：count
*'''list(value)'''
将value转换为序列，如果value是字符串，则将字符串转换为字符数组。
*'''lower(s)'''
将字符串转换为小写
*'''pprint(value, verbose=False)'''
debug时使用，可以打印变量的详细信息。
*'''random(seq)'''
随机从序列中取得一个值。

*'''replace(s, old, new, count=None)'''
将字符s中的old字符串替换为new字符串，如果给定了count，则最多替换count次。
*'''reverse(value)'''
将一个序列反转。
*'''round(value, precision=0, method='common')'''
浮点数求精。precision是小数点位数，method有common,ceil,floor三种。common是四舍五入，ceil和floor与 python的同名函数功能相同。
*'''safe(value)'''
如果当前模板设置了html自动转义，用此过滤器可以使value不转义
*'''slice(value, slices, fill_with=None)'''
将序列分片，用fill_with字符填充最后一组子序列长度不足的部分。
*'''sort(value, reverse=False)'''
将序列按从小到大排序，reverse为true则按从大到小排序
*'''string(object)'''
将一个对象转换为unicode字符串
*'''striptags(value)'''
去掉字符串value中的html，xml标签
*'''sum(sequence, start=0)'''
统计数值序列的和。start表示从第几项开始计算
*'''title(s)'''
将字符串s中每个单词首字符大写

*'''trim(value)'''
去掉字符串value中首尾的空格

*'''truncate(s, length=255, killwords=False, end='...')'''
截断一个字符串为length长度，末尾补end字符。killword为false则将最后一个单词完整保留，为True则将严格按照给定的长度截断。
*'''upper(s)'''
将字符串转换为大写
*'''urlize(value, trim_url_limit=None, nofollow=False)'''

*'''wordcount(s)'''
统计字符串中单词的个数
*'''wordwrap(s, pos=79, hard=False)'''
将字符串s按照pos长度换行。如果hard为True，则强制截断单词。
*'''xmlattr(d, autospace=True)'''
创建一个sgml/xml的属性字符串，例如：
<pre>
<ul{{ {'class': 'my_list', 'missing': none, 'id': 'list-%d'|format(variable)}|xmlattr }}>
...
</ul>
</pre>
结果会是这个样子:
<pre>
<ul class="my_list" id="list-42">
...
</ul>
</pre>
值会自动进行html转义，如果为未定义或者None则忽略。
*'''autospace''': 自动在首部添加空格. 