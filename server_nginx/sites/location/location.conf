#
# 匹配 / 开始的所有请求
#
location / {
    #
    # 是否开启认证
    # string|off（默认）
    # 作用域：http,、server,、location,、limit_except
    #
    auth_basic off;
    #
    # 用户密码文件
    #
    auth_basic_user_file conf/htpasswd;
    #
    # 文件查找顺序，找不到就返回一个404
    # 作用域：http,、server,、location,、limit_except
    #
    try_files $uri $uri/ =404;
    # 将client post过来的数据记录到文件中，
    # client_body_in_file_only on
    # client_body_temp_path————设置记录文件的目录，可以设置最多3层目录
    # location对URL进行匹配，可以进行重定向或者进行新的代理负载均衡
    if ($http_user_agent ~* "xnp") {
        #
        # rewrite *** flag————重定向URI，或者修改字符串————依赖pcre库
        # 作用域：server、location、if
        # flag————默认none
        # last————相当于apache里面的[L]标记，表示rewrite，浏览器地址栏不变
        # break————本条规则匹配完成后，不再匹配后面的规则，浏览器地址栏不变
        # redirect————返回302临时重定向，浏览器地址会显示跳转后的URL地址
        # permanent————返回301永久重定向，浏览器地址会显示跳转后的URL地址
        #
        # 使用alias指令必须用last标记
        # 使用proxy_pass指令时，需要使用break标记
        #
        rewrite ^(.*)$ http://www.***.com/;
        #rewrite ^(.*)$ http://i1.***img.com/help/noimg.gif redirect;
    }
}
#
# 定义错误提示页面
#
error_page 500 502 503 504 /50x.html;
location = /50x.html {
    root /root;
}
#
# @————定义一个命名的 location，使用在内部定向时
# 例如 error_page, try_files
#
location /image {
    #error_page 404 http://i1.***img.com/help/noimg.gif;
    error_page 400 402 404 = @fetch;
}

location @fetch {
    access_log /data/logs/image.log log404;
    rewrite ^(.*)$ http://211.151.188.190:8080/face.jpg redirect;
}
#
# 对以mp3或exe结尾的地址进行负载均衡
#
location ~* \.(mp3|exe)$ {
    #
    # 设置反向代理地址
    #
    # http://img_relay$request_uri;
    # 被代理服务器的端口或套接字，以及URL
    # 对应upstream名字————转移到真正提供服务的一台机器
    #
    proxy_pass http://img_relay$request_uri;
    # 将代理服务器收到的用户的信息传到真实服务器上
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #
    # 禁用缓存
    #
    proxy_buffering off;
}

location /nginx_status {
    #
    # http_stub_status_module模块
    # 查看nginx运行状态
    #
    stub_status on;
    #
    # 允许的ip
    #
    allow 127.0.0.1; #本机测试需要
    allow ***;
    #
    # 禁止的ip
    #
    deny ***;
    # deny all； # 除上述运行外拒绝所有
}
location ~ /\.ht {
    deny all;
    # 禁止访问.htxxx文件
}