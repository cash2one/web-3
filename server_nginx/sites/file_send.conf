# 头文件默认字符集
charset UTF-8;
#
# 是否调用sendfile 函数（zero copy 方式）来输出文件
# 对于普通应用，必须设为on
# 用来进行下载等磁盘IO重负载应用，可设置为off，以平衡磁盘与网络IO处理速度，降低系统uptime
sendfile on;
#
# 在一个数据包里发送所有头文件（前提：sendfile on）
tcp_nopush on;
# 不要缓存数据，而是一段一段发送（及时发送数据，发送一小块数据信息时就不能立即得到返回值）
# 与tcp_nopush互斥
# tcp_nodelay on;
#------------------------------------------------------------------------------------------open_file
#
# 为打开文件指定缓存，默认不启用
# max————指定缓存数量，建议和打开文件数一致
# inactive————经过多长时间文件没被请求后删除缓存
# open_file_cache max=65535 inactive=60s;
#
# inactive时间内文件的最少使用次数
# 如果超过这个数字，文件描述符一直是在缓存中打开的，默认1
# open_file_cache_min_uses 1;
#
# 多长时间检查一次缓存的有效信息，默认60
open_file_cache_valid 80s;
#
# 搜索一个文件时是否记录cache错误，默认off
# open_file_cache_errors on;
#-----------------------------------------------------------------------------------------------gzip
#
# 发送经过gzip压缩的数据，减少数据发送量
gzip on;
#
# 对数据启用压缩的最少字节数，默认0
# 一个请求小于1000字节，最好不要压缩（压缩这些小数据会降低处理此请求的所有进程的速度）
gzip_min_length  1k;
#
# 数据压缩等级（1-9，9最慢、压缩比最大），默认1，建议4
gzip_comp_level 2;
#
# 用于存储压缩结果数据流的缓存单位
# 默认4 4k/8k————按照原始数据大小以4k为单位的4倍申请内存
gzip_buffers 4 16k;
#
# 识别http的协议版本，默认1.1
# 早期的一些浏览器或者http客户端，可能不支持gzip自解压，用户就会看到乱码
gzip_http_version 1.0|1.1;
#
# 需要压缩的数据格式，默认text/html，不能用通配符text/*
gzip_types text/plain application/x-javascript text/css application/xml;
#
# 有的浏览器不支持压缩，根据客户端的HTTP头来判断，避免浪费
gzip_vary on;
#
# 为指定的客户端禁用gzip功能————MSIE[1-6]、IE1~IE6
gzip_disable "MSIE [1-6]\.(?!.*SV1)";
#
# 在压缩资源之前，先查找是否有预先gzip处理过的资源
# 这要求你预先压缩你的文件，从而允许你使用最高压缩比，这样nginx就不用再压缩这些文件了
gzip_static on
#
# 允许或者禁止压缩基于请求和响应的响应流
# any————压缩所有的请求
gzip_proxied any;