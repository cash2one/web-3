赋值
在一个代码块内部你可以为一个变量赋值。在块（block, macro, loop)外部赋值的变量可以被从模板中导出，提供给其它模板使用。
一个赋值语句的用法如下例：
<pre>
{% navigation = [('index.html', 'Index'), ('about.html', 'About')] %}
</pre>
include
用include可以导入另外一个模板到当前模板中
<pre>
{% include 'header.html' %}
Body
{% include 'footer.html' %}
</pre>
import

Jinja2支持将常用的代码放到宏中。这些宏可以放到不同的模板中，然后用import语句导入来使用，这有点类似python的import 功能。需要注意的是，import导入的模板会被缓存，而且导入到模板不能访问当前模板的本地变量，它只能访问全局变量。

导入模板有两种方式，一是导入整个的模板作为一个变量，另一个方法是从一个模板中导入指定的宏或者可导出的变量
下面我们写一个名为"form.html"的模板， 这个模板作为一个公共模板提供给其它模板使用
<pre>
{% macro input(name, value='', type='text') -%}
    <input type="{{ type }}" value="{{ value|e }}" name="{{ name }}">
{%- endmacro %}

{%- macro textarea(name, value='', rows=10, cols=40) -%}
    <textarea name="{{ name }}" rows="{{ rows }}" cols="{{ cols
        }}">{{ value|e }}</textarea>
{%- endmacro %}
</pre>
最简单和灵活的方式是把form.html整个导入到一个模板中
<pre>
{% import 'forms.html' as forms %}
<dl>
    <dt>Username</dt>
    <dd>{{ forms.input('username') }}</dd>
    <dt>Password</dt>
    <dd>{{ forms.input('password', type='password') }}</dd>
</dl>
<p>{{ forms.textarea('comment') }}</p>
</pre>
或者导入指定的内容（宏或者变量）到当前模板中
<pre>
{% from 'forms.html' import input as input_field, textarea %}
<dl>
    <dt>Username</dt>
    <dd>{{ input_field('username') }}</dd>
    <dt>Password</dt>
    <dd>{{ input_field('password', type='password') }}</dd>
</dl>
<p>{{ textarea('comment') }}</p>
</pre>
表达式

Jinja的表达式在模板中到处都是，它的语法很类似python，而且它很简单，即使不会python也可以很容易学会它。

字面值

字面值是最简单的表达式，它其实就是一个python的对象，在Jinja中有下面几种字面值：
字符串，数字，序列，元组，字典，bool类型。

它们的用法很python的很接近，如下面的例子：
<pre>
<ul>
{% for href, caption in [('index.html', 'Index'), ('about.html', 'About'),
                         ('downloads.html', 'Downloads')] %}
    <li><a href="{{ href }}">{{ caption }}</a></li>
{% endfor %}
</ul>
</pre>
数字计算

Jinja支持一下几种操作符：
+,-,/,//(整除），%求余，*乘，**次方

逻辑操作
Jinja支持一下几种逻辑操作符，它们可以放在if块中使用：
and, or, not, ()

其它操作符
'''in '''
判断一个对象是否存在于另一个序列或者元组中
<pre>
{{ 1 in [1, 2, 3] }}
</pre>
'''is'''
执行一个检查器
'''|'''
执行一个过滤器
'''~'''
连接字符串 '{{ "Hello " ~ name ~ "!" }}'，如果name的值是'world， 显示的内容将是 "Hello world"
'''( )''' 调用函数
'''. / []''' 访问一个对象的属性

if表达式
Jinja支持内联表达式，在某些情况下非常有用，例如：
<pre>
{% extends layout_template if layout_template is defined else 'master.html' %}
</pre>
这个例子的意思是：如果变量layout_template已定义则导入，否则导入master.html
通用的语法规则是'''<do something> if <something is true> else <do something else>''' 